name: Deploy Kuberenetes the Hard Way with Terraform
on: ["workflow_dispatch"]

permissions:
      id-token: write
      contents: read

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  TF_VAR_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  TF_VAR_VNET_CIDR: "${{ secrets.VNET_CIDR }}"
  TF_VAR_STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
  TF_VAR_STORAGE_ACCOUNT_CONTAINER_NAME: ${{ secrets.STORAGE_ACCOUNT_CONTAINER_NAME }}
      
jobs: 
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  terraform-init-plan-apply:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: dev

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan 

    - name: Terraform Apply
      run: terraform apply -auto-approve -var 'client_id=${{ secrets.AZURE_CLIENT_ID }}' \
                           -var 'client_secret=${{ secrets.AZURE_CLIENT_SECRET }}' \
                           -var 'subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}' \
                           -var 'tenant_id=${{ secrets.AZURE_TENANT_ID }}' \
                           -var 'vnet_cidr=${{ secrets.VNET_CIDR }}'